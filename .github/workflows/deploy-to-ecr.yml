name: Deploy to Amazon ECS

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      BRANCH: 
        required: true
        type: string
      ENVIRONMENT:
        required: false
        type: string
        default: 'production'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      BIG_BANG_SECRET:
        required: true
      BITBUCKET_KEY:
        required: true
    outputs:
      TAG:
        description: "The first output string"
        value: ${{ jobs.deploy.outputs.TAG }}


# env:
#   AWS_REGION: "ap-southeast-2"                   # set this to your preferred AWS region, e.g. us-west-1
#   ECR_REPOSITORY: "github_action_test_repo"           # set this to your Amazon ECR repository name

jobs:
  deploy:
    outputs:
      TAG: ${{ steps.build-image.outputs.TAG }}
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.BRANCH }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - uses: olegtarasov/get-tag@v2.1
      id: tagName

    - name: Output tag names
      run: |
        echo "${{ env.GIT_TAG_NAME }}"
        echo "${{ steps.tagName.outputs.tag }}"
        


    - name: Install dependencies
      run: |
      
        sudo apt-get install npm -y
        npm install --global yarn
        npm upgrade --global yarn 
        yarn --version
    
#     - name: Map SSH keys
#       run: |
#         eval `ssh-agent -s`
#         ssh-add - <<< '${{ secrets.BIG_BANG_SECRET }}'
    
    - name: Save secrets to file
      shell: bash
      env:
        SSH_KEY: ${{secrets.BIG_BANG_SECRET}}
        BITBUCKET_KEY: ${{secrets.BITBUCKET_KEY}}
      run: |
        echo "$SSH_KEY" > docker/id_ed25519
        echo "$BITBUCKET_KEY" > docker/id_rsa
        
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.tagName.outputs.tag }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        
 
        echo $ECR_REGISTRY/${{ inputs.ECR_REPOSITORY}}:$IMAGE_TAG
        echo "${{ toJSON(steps.login-ecr.outputs) }}"
        TAG=$IMAGE_TAG
        
        if [ -z "$TAG" ]
        then
              echo "\$TAG is empty"
              TAG='latest'
        else
              echo "\$TAG is NOT empty"
        fi
        echo "AFTER: $TAG"
        echo "::set-output name=TAG::$TAG"
        
        FILE=docker/id_ed25519
        if [ -f "$FILE" ]; then
            echo "$FILE exists."
        fi
        docker build -t $ECR_REGISTRY/${{ inputs.ECR_REPOSITORY}}:$TAG --build-arg TAG_VERSION=$TAG .

        #Push image to repository on release only
        if [[ ${{ github.event_name }} == "release" ]]; then
              echo "Image will be pushed to ECR on release"
              docker push $ECR_REGISTRY/${{ inputs.ECR_REPOSITORY}}:$TAG
              echo "::set-output name=image::$ECR_REGISTRY/${{ inputs.ECR_REPOSITORY}}:$TAG"
        else
              echo "Image wont be pushed to ECR on manual workflow trigger"
        fi
        #echo 'name:${{ github.event_name }}'
